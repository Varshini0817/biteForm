<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Page</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- MDB CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.2.0/mdb.min.css" rel="stylesheet">
    <!-- Font Awesome CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body{
            background-color: #FFDEE9;
            background-image: linear-gradient(85deg, #FFDEE9 0%, #B5FFFC 100%);
        }
        .table td, .table th {
            vertical-align: middle;
        }
        .table-responsive {
            overflow-x: auto;
        }
        /* Adjust column widths */
        .name-column {
            width: 25%;
        }
        .tab-column {
            width: 20%;
        }
        .wallpaper-column {
            width: 5%;
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .logout-button {
            float: right;
        }
        #chatIcon {
            position: fixed;
            bottom: 20px; /* Adjust as needed */
            right: 20px; /* Adjust as needed */
            z-index: 9999; /* Ensure it's on top of other content */
            cursor: pointer;
        }
        .chat-icon-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            cursor: pointer;
        }

        .chat-icon-container .fa-comment-dots {
            font-size: 3rem;
            position: relative;
        }

        .chat-icon-container .unread-count {
            position: absolute;
            top: 8px;
            right: 4px;
            background: rgb(255, 255, 255);
            color: black;
            border-radius: 50%;
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
         .table-dark th {
            color: rgb(0, 0, 0);
            text-align: center;
            padding: 12px;
            background: linear-gradient(110deg  , #66bfbf, #eaf6f6, #fcfefe, #f76b8a);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <p>
            <h3 style="text-align: center;" class="mt-5 mb-4">Admin Page</h3>
            <button type="button" class="btn btn-danger logout-button" data-bs-toggle="modal" data-bs-target="#logoutModal">Logout</button>
        </div>
        
        <!-- Logout Modal -->
        <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="logoutModalLabel"><i class="fas fa-power-off fa-xs"></i> Logout</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to logout?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" id="confirmLogout" class="btn btn-primary">Logout</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End of Logout Modal -->
        {{#each groupedUsers}}
        <h6>Date: {{@key}}</h6>
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">S.No.</th>
                        <th scope="col" class="name-column" style="text-align:center;">Name</th>
                        <th scope="col" class="tab-column" style="text-align:center;background-image: url('https://osteodiet.com/wp-content/uploads/2012/07/Breakfast-1024x258.jpg');background-size: contain; background-position:center; background-repeat: no-repeat; background-color: white;"></th>
                        <th scope="col" class="tab-column" style="text-align:center;background-image: url('https://go.sdale.org/LunchCounts/00/Name.svg');background-size: contain; background-position:center; 
                        background-repeat: no-repeat; background-color: white; "></th>
                        <th scope="col" class="tab-column"  style="text-align:center;background-image: url('https://www.48hourslogo.com/48hourslogo_data/2016/10/04/54623_1475588469.jpg');background-size: cover; background-position:center; 
                        background-repeat: no-repeat; background-color: white; "></th>
                        <th scope="col" class="wallpaper-column" >Wallpaper</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each this}}
                    <tr>
                        <td>{{@index}}</td>
                        <td>{{this.name}}</td>
                        <td>
                            {{#if this.tab.breakfast.length}}
                                {{#each this.tab.breakfast}}
                                    <ul>
                                        <li><strong>Name:</strong> {{this.name}}</li>
                                        <li><strong>Ate:</strong> {{this.ate}}</li>
                                        {{#if this.reason}}<li><strong>Reason:</strong> {{this.reason}}</li>{{/if}}
                                        <li><strong>Tablets:</strong> {{this.tablets}}</li>
                                        <li><strong>Timestamp:</strong> {{formatDateTS this.timestamp}}</li>
                                    </ul>
                                {{/each}}
                                {{else}} <p class="text-muted" style="text-align:center;">No entry</p>
                            {{/if}}
                        </td>
                        <td>
                            {{#if this.tab.lunch.length}}
                                {{#each this.tab.lunch}}
                                    <ul>
                                        <li><strong>Name:</strong> {{this.name}}</li>
                                        <li><strong>Ate:</strong> {{this.ate}}</li>
                                        {{#if this.reason}}<li><strong>Reason:</strong> {{this.reason}}</li>{{/if}}
                                        <li><strong>Tablets:</strong> {{this.tablets}}</li>
                                        <li><strong>Timestamp:</strong> {{formatDateTS this.timestamp}}</li>
                                    </ul>
                                {{/each}}
                                {{else}} <p class="text-muted" style="text-align:center;">No entry</p>
                            {{/if}}
                        </td>
                        <td>
                            {{#if this.tab.supper.length}}
                                {{#each this.tab.supper}}
                                    <ul>
                                        <li><strong>Name:</strong> {{this.name}}</li>
                                        <li><strong>Ate:</strong> {{this.ate}}</li>
                                        {{#if this.reason}}<li><strong>Reason:</strong> {{this.reason}}</li>{{/if}}
                                        <li><strong>Tablets:</strong> {{this.tablets}}</li>
                                        <li><strong>Timestamp:</strong> {{formatDateTS this.timestamp}}</li>
                                    </ul>
                                {{/each}}
                                {{else}} <p class="text-muted" style="text-align:center;">No entry</p>
                            {{/if}}
                        </td>
                        <td>{{#if this.wallpaper}}<em>True</em>{{else}}-{{/if}}</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
        {{/each}}
    <div id="chatIcon" class="position-fixed bottom-0 end-0 m-3 chat-icon-container" style="cursor: pointer;">
        <a href="adminChat/{{admin}}"><img src="https://img.icons8.com/?size=100&id=116714&format=png&color=000000">{{#if unreadCount}}
        <span class="unread-count">{{unreadCount}}</span>
        {{/if}}</a>
    </div>
    </div>

    

    <!-- Bootstrap 5 JS Bundle (including Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- JQuery -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script>
    <script>
        const socket = io({
        query: {
            userName: "{{admin}}" // Replace with actual username or identifier
        }
    });
        socket.on('ur',(unreadCount)=>{
            console.log(data)
        //const unreadCount = data.unreadCount;
        // Find the element displaying the unread count
        const unreadCountElement = document.querySelector('.unread-count');
        if (unreadCount > 0) {
            // If the element exists, update its content
            if (unreadCountElement) {
                unreadCountElement.textContent = unreadCount;
            } else {
                // If the element doesn't exist and unreadCount is greater than 0, create the element
                    const chatIconContainer = document.getElementById('chatIcon');
                    const newUnreadCountElement = document.createElement('span');
                    newUnreadCountElement.className = 'unread-count';
                    newUnreadCountElement.textContent = unreadCount;
                    chatIconContainer.appendChild(newUnreadCountElement);
                }
        }
        console.log(`${unreadCount}`)
    })
            socket.on('receiveMessage',(data)=>{
            const unreadCount = data.unreadCount;
            // Find the element displaying the unread count
            const unreadCountElement = document.querySelector('.unread-count');

            // If the element exists, update its content
            if (unreadCountElement) {
                unreadCountElement.textContent = unreadCount;
            } else {
                // If the element doesn't exist and unreadCount is greater than 0, create the element
                if (unreadCount > 0) {
                    const chatIconContainer = document.getElementById('chatIcon');
                    const newUnreadCountElement = document.createElement('span');
                    newUnreadCountElement.className = 'unread-count';
                    newUnreadCountElement.textContent = unreadCount;
                    chatIconContainer.appendChild(newUnreadCountElement);
                }
            }
        console.log(`${unreadCount}`)
    })
        // Handle logout confirmation
        $(document).ready(function () {
            $('#confirmLogout').click(function () {
                // Perform logout action here, for example redirect to logout route
                window.location.href = '/logout';
            });
        });
    </script>
</body>
</html>