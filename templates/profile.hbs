<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <!-- Bootstrap 5 CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(90deg, #51d6d2, #81e8f6);
      font-family: 'Roboto', sans-serif;
      color: #333;
    }

    .profile-card {
      background: linear-gradient(45deg, #00C9FF, #92FE9D);
      border-radius: 10px;
      box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
      padding: 20px;
      color: #333;
    }

    .profile-photo-container {
      display: flex;
      justify-content: center;
      margin-bottom: 20px; /* Add some space below the container */
    }

    .profile-photo {
      width: 150px;
      height: 150px;
      border-radius: 50%;
      object-fit: cover;
    }
    .btn-primary {
      background: linear-gradient(135deg, #43e695, #3bb2b8);
      border-color: #3bb2b8;
      color: #fff;
    }

    .btn-primary:hover {
      background: linear-gradient(135deg, #3bb2b8, #43e695);
      border-color: #3bb2b8;
      color: #fff;
    }

    .btn-primary:focus, .btn-primary.focus {
      background: linear-gradient(135deg, #3bb2b8, #43e695);
      border-color: #3bb2b8;
      color: #fff;
      box-shadow: 0 0 0 0.25rem rgba(59, 178, 184, 0.5);
    }
    @media screen and (max-width: 770px) {
      .back-button {
        margin-bottom: 20px;
      }
    }
  </style>
</head>
<body>
  <!-- Password Update Modal -->
  <div class="modal fade" id="passwordUpdateModal" tabindex="-1" aria-labelledby="passwordUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="passwordUpdateModalLabel">Change Password</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="passwordUpdateForm">
            <div class="mb-3">
              <label for="currentPassword" class="form-label">Current Password:</label>
              <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
            </div>
            <div class="mb-3">
              <label for="newPassword" class="form-label">New Password:</label>
              <input type="password" class="form-control" id="newPassword" name="newPassword" required>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
          </form>
        </div>
      </div>
    </div>
  </div>

  <!-- Profile Page -->
  <div class="container py-2">
      <img src="https://img.icons8.com/?size=100&id=81127&format=png&color=000000" onclick="goBack()" style="height:40px;width:40px; cursor:pointer;">
    <div class="row justify-content-center">
      <div class="col-md-6">
        <div class="profile-card">
        <!-- Profile fields -->
        <form id="avatarForm" action="/uploadProfilePhoto/{{urlEncode user.name}}" method="post" enctype="multipart/form-data">  
          <div class="profile-photo-container">
            <img id="profilePhoto" src="/avatar/{{urlEncode user.name}}" class="profile-photo" alt="Profile Photo" 
                onerror="this.onerror=null;this.src='https://www.pngitem.com/pimgs/m/22-223968_default-profile-picture-circle-hd-png-download.png';">
          </div>
          <div class="d-flex justify-content-center align-items-center mb-3">
            <input type="file" id="profilePhotoInput" class="form-control me-2" accept="image/*" name='avatar' required>
            <button class="btn btn-primary" id="uploadPhotoButton" type="submit">Upload</button>
          </div>
        </form>
        <div class="d-flex justify-content-center"><button class="btn btn-danger" style="left:50vh;" id="deletePhotoButton">Delete</button></div>
        

          <div class="mb-3 text-left">
            <label for="name" class="form-label">Name:</label>
            <input type="text" class="form-control" id="name" name="name" value="{{user.name}}" readonly>
          </div>
          <div class="mb-3 text-left">
            <label for="email" class="form-label">Email:</label>
            <input type="email" class="form-control" id="email" value="{{user.email}}" readonly>
          </div>
          <div class="mb-3 text-left">
               <form id="phoneUpdateForm" action="/updatePhone/{{user.name}}" method="post">
              <label for="phone" class="form-label">Phone Number:</label>
              <div class="input-group">
                <input type="tel" class="form-control" id="phone" name="phone" value="{{user.phone}}" readonly>
                <button style="color:rgb(183, 50, 63);" class="btn btn-outline-secondary" type="button" id="editPhoneButton">Edit</button>
              </div>
            </form>
          </div>
          <div class="text-center">
            <a href="/dataUser/{{user.name}}" class="btn btn-primary">View your data</a>
            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#passwordUpdateModal">Change Password</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    function goBack() {
      window.location.href = '/user';
    }

    // JavaScript code to handle password update form submission
    document.getElementById('passwordUpdateForm').addEventListener('submit', async (event) => {
      event.preventDefault();

      const currentPassword = document.getElementById('currentPassword').value;
      const newPassword = document.getElementById('newPassword').value;

      // Send a POST request to the backend to update the password
      try {
        const response = await fetch(`/updatePassword/{{user.name}}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ currentPassword, newPassword })
        });
        if (!response.ok) {
          const errorMessage = await response.text();
          alert(errorMessage);
        } else {
          alert('Password updated successfully');
        }
      } catch (error) {
        console.error('Error updating password:', error);
        alert('An error occurred while updating password');
      }
    });

    // JavaScript code to handle phone number update
    document.getElementById('editPhoneButton').addEventListener('click', async(event) => {
      const phoneInput = document.getElementById('phone');
      const editPhoneButton = document.getElementById('editPhoneButton');

      if (phoneInput.readOnly) {
        // Enable editing of phone number
        phoneInput.readOnly = false;
        phoneInput.focus();
        editPhoneButton.textContent = 'Save'; // Change button text to 'Save'
      } else {
        // Disable editing of phone number and trigger form submission
        phoneInput.readOnly = true;
        editPhoneButton.textContent = 'Edit'; // Change button text back to 'Edit'
        try {
            const response = await fetch(`/updatePhone/{{user.name}}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ phone: phoneInput.value })
            });
            if (!response.ok) {
              const errorMessage = await response.text();
              alert(errorMessage);
            } 
          } catch (error) {
            console.error('Error updating phone number:', error);
            alert('An error occurred while updating phone number');
          }
          event.preventDefault();
        }
      });

      document.getElementById('avatarForm').addEventListener('submit', async function(event) {
      event.preventDefault();
      
      const form = event.target;
      const formData = new FormData(form);
      const username = '{{user.name}}';

      try {
        const response = await fetch(`/uploadProfilePhoto/${username}`, {
          method: 'POST',
          body: formData
        });
        
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const data = await response.json();
        alert("Profile photo successfully updated!")
        window.location.href=`/profile/{{user.name}}`
      } catch (error) {
        console.error('Error uploading file:', error);
      }
    });

    document.getElementById('deletePhotoButton').addEventListener('click', async () => {
    const username = "{{urlEncode user.name}}";
    const response = await fetch(`/deleteProfilePhoto/${username}`, { method: 'DELETE' });
    if (response.ok) {
      document.getElementById('profilePhoto').src = 'https://www.pngitem.com/pimgs/m/22-223968_default-profile-picture-circle-hd-png-download.png';
    } else {
      alert('Failed to delete avatar.');
    }
  });
  </script>
  <!-- Bootstrap 5 JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
