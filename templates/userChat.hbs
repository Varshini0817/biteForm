<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat App</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.2.0/mdb.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <style>
        #chat2 .form-control {
            border-color: transparent;
        }

        #chat2 .form-control:focus {
            border-color: transparent;
            box-shadow: inset 0px 0px 0px 1px transparent;
        }

        .divider:after,
        .divider:before {
            content: "";
            flex: 1;
            height: 1px;
            background: #eee;
        }

        .card-body {
            background-color: #fff;
        }

        .card-footer {
            background-color: #f5f6f7;
        }
    </style>
</head>
<body>
<section style="background-color: #eee;">
    <div class="container py-5">
        <div class="row d-flex justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-6">
                <div class="card" id="chat2">
                    <div class="card-header d-flex justify-content-between align-items-center p-3">
                        <h5 class="mb-0">Chat</h5>
                        <button type="button" class="btn btn-primary btn-sm" id="startChat">Chat with admin</button>
                    </div>
                    <div class="card-body" id="chatMessages" style="position: relative; height: 400px; overflow-y: scroll;">
                        <!-- Chat messages will be appended here dynamically -->
                    </div>
                    <div class="card-footer text-muted d-flex justify-content-start align-items-center p-3">
                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3-bg.webp" alt="avatar 3" style="width: 40px; height: 100%;">
                        <input type="text" class="form-control form-control-lg" id="messageInput" placeholder="Type message">
                        <a class="ms-1 text-muted" href="#!" id="attachFile"><i class="fas fa-paperclip"></i></a>
                        <a class="ms-3 text-muted" href="#!" id="sendEmoji"><i class="fas fa-smile"></i></a>
                        <a class="ms-3" href="#!" id="sendMessage"><i class="fas fa-paper-plane"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.socket.io/4.4.1/socket.io.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    const socket = io();
    const userName = "<%= name %>";

    // Join user's own room
    socket.emit('join', userName);

    // Function to send a message
    function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const message = messageInput.value.trim();

        if (message !== '') {
            const messageObj = { sender: userName, recipient: 'admin', content: message };

            // Emit the message to the server
            socket.emit('sendMessage', messageObj);

            // Append the sent message to the chat window
            const chatMessages = document.getElementById('chatMessages');
            const messageElement = document.createElement('div');
            messageElement.textContent = message;
            messageElement.classList.add('user-message'); // Add class to distinguish user messages
            chatMessages.appendChild(messageElement);

            // Scroll to the bottom of the chat window
            chatMessages.scrollTop = chatMessages.scrollHeight;

            // Clear the message input field
            messageInput.value = '';
        }
    }

    // Event listener for the send message button
    document.getElementById('sendMessage').addEventListener('click', sendMessage);

    // Event listener for pressing enter in the message input field
    document.getElementById('messageInput').addEventListener('keypress', (event) => {
        if (event.key === 'Enter') {
            sendMessage();
        }
    });

    // Socket event listener for receiving messages
    socket.on('receiveMessage', (msg) => {
        // Append the received message to the chat window
        const chatMessages = document.getElementById('chatMessages');
        const messageElement = document.createElement('div');
        messageElement.textContent = msg.content;
        messageElement.classList.add('received-message'); // Add class to distinguish received messages
        chatMessages.appendChild(messageElement);

        // Scroll to the bottom of the chat window
        chatMessages.scrollTop = chatMessages.scrollHeight;
    });
</script>
</body>
</html>
